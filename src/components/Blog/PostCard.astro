---
import Link from "@/components/Link.astro";
import type {Post} from "@/content";
import {getRelativeTime, parseDate} from "@/lib/utils";
import {Img as Picture} from "astro-imagetools/components";
import {Icon} from "astro-icon/components";

interface Props {
	post: Post;
	index?: number;
	loading?: string;
}
const {post, loading} = Astro.props;
const relativeDate = getRelativeTime(post.published);
const acurateDate = parseDate(post.published.toISOString());

const image = post.banner || `${Astro.url.origin}/blog/${post.slug}/og.png`;
---

<div class="group relative">
	<Link aria-label={`Read "${post.title}"`} href={`/blog/${post.slug}`} class="block">
		<figure transition:name="image" class="mt-4 aspect-video overflow-clip rounded-box">
			<Picture
				src={image}
				alt={post.title}
				height={412}
				width={640}
				format="avif"
				placeholder="blurred"
				breakpoints={[300, 400, 480]}
				loading={loading}
				attributes={{
					img: {
						class: "group-hover:scale-110 transition-transform duration-1000 ease-in-out",
					},
				}}
			/>
		</figure>
	</Link>

	<Link aria-label={`Read "${post.title}"`} href={`/blog/${post.slug}`} class="block">
		<h2
			transition:name={`article-${post.slug}`}
			class:list={[
				"mt-3 font-title font-semibold transition-colors duration-300 ease-in-out group-hover:text-accent",
			]}
		>
			{post.title}
			<svg
				xmlns="http://www.w3.org/2000/svg"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				fill="none"
				stroke-linecap="round"
				stroke-linejoin="round"
				class:list={[
					"mb-1 inline h-5 w-5 transition-all duration-300 ease-in-out",
					"stroke-base-100 group-hover:stroke-accent",
				]}
			>
				<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
				<path d="M17 7l-10 10"></path>
				<path d="M8 7l9 0l0 9"></path>
			</svg>
		</h2>
	</Link>
	<p class="prose-sm line-clamp-3 text-neutral-content">{post.description}</p>

	<div class="mt-2 flex flex-wrap items-center gap-x-3 gap-y-1">
		<div
			class="flex items-center gap-1"
			title={`Published on ${acurateDate?.date} ${acurateDate?.month} ${acurateDate?.year}`}
		>
			<Icon
				size={22}
				name="tabler:calendar-month"
				class="text-base-content/70 group-hover:text-accent"
			/>
			<p class="prose">
				{relativeDate}
			</p>
		</div>

		{
			post.tags.length !== 0 && (
				<div class="group/tags flex flex-wrap items-center">
					<Icon
						size={22}
						name={post.tags.length < 2 ? "tabler:tag" : "tabler:tags"}
						class="mx-1 text-base-content/70 group-hover:text-accent"
					/>
					{post.tags.map((tag) => {
						return (
							<Link
								href={`/tags/${tag}`}
								aria-label={`View posts tagged with ${tag}`}
								class="group/link relative mr-2 overflow-clip py-0.5"
							>
								<div
									aria-hidden="true"
									class:list={[
										"absolute bottom-0.5 h-[0.1px] w-0 bg-accent",
										"transition-all duration-300 ease-in-out",
										"group-hover/link:w-full",
									]}
								/>
								<span class="prose relative transition-colors duration-300 ease-in-out group-hover/link:text-accent">
									#{tag}
								</span>
							</Link>
						);
					})}
				</div>
			)
		}
	</div>
</div>
