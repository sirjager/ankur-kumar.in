---
import Article from "@/components/Article/Article.astro";
import ArticleSchema from "@/components/Article/ArticleSchema.astro";
import Discussions from "@/components/Article/Discussions.astro";
import {toPost} from "@/content";
import Root from "@/layouts/Root.astro";
import {getEntry} from "astro:content";

import {getMatters} from "@/content";

export async function getStaticPaths() {
	const blog = await Astro.glob("../../../content/blog/*.md?(x)");
	const posts = getMatters(blog, {method: "astro", type: ["blog"]});
	return posts.map((post) => ({params: {slug: post.slug}}));
}

const {slug} = Astro.params;
const entry = await getEntry("blog", slug);
if (!entry) return Astro.redirect("/404");
const {Content, ...rest} = await entry.render();
const post = toPost(entry, rest);

const ogimage = `${Astro.url.origin}/blog/${post.slug}/og.png`;
---

<Root title={post.title} description={post.description} image={ogimage}>
	<ArticleSchema slot="head" post={post} />

	<Article post={post}>
		<Content />
	</Article>

	<div
		class:list={[
			"relative isolate mt-28 grid @container",
			"gap-y-8 px-4 lg:gap-x-4 lg:px-0",
			"grid-cols-[1fr,min(640px,100%),1fr]",
			"lg:grid-cols-[1fr,minmax(auto,224px),min(540px,100%),minmax(360px,224px),1fr]",
			"[&>*]:col-start-1 lg:[&>*]:col-start-2",
		]}
	>
		{
			!post.options?.includes("comments-disable") && (
				<div class="col-span-3 lg:!col-end-5">
					<Discussions />
				</div>
			)
		}
	</div>
</Root>
